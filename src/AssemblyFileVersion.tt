<#@ template language="C#" hostSpecific="True"#>
<#@ output extension="cs" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#
	string dir = Host.ResolveAssemblyReference("$(SolutionDir)");
	// Host.ResolveAssemblyReference has a bug where when run from msbuild 
	// it does not honor expansions for $(SolutionDir). Lame workaround.
	int n = dir.IndexOf("$(SolutionDir)");
	if (n > -1)
		dir = dir.Remove(n, dir.Length - n) + "..\\..\\";
	string file = Path.Combine(dir, "..\\Installer\\version.txt");
	string contents = File.ReadAllText(file); 
 
    // major.minor.fix.build - build may be missing
	string[] parts = contents.Split('.');
	int build = 0;
	if (parts.Length > 3 && int.TryParse(parts[3], out build))
        build++;

    string version = $"{parts[0]}.{parts[1]}.{parts[2]}.{build}";

	// write the new version number back to the file
	File.WriteAllText(file, version);
	Console.WriteLine("Generated Build #: " + version);
#>
// This file was generated by a tool. Any changes made manually will be lost
// the next time this project is built (via AssemblyFileVersion.tt).
using System.Reflection;
[assembly: AssemblyVersion("<#= version #>")]
[assembly: AssemblyFileVersion("<#= version #>")]
[assembly: AssemblyCopyright("Copyright © 2019 Kindel Systems, LLC.")] 